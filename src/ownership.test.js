const qcpb = require('./qc_pb_with_extra');
const fs = require('fs');
const Identity = require('./identity');
const Ownership = require('./ownership');

// var unapprovedBytes = new Buffer("0a192f696e736161736974792f6f776e6572736869705f6c6f67731204726561641a117365727665726c657373626c65737365722209696e7361617369747952981e0a40056f2c6d983dd39bd63c49da725564235f1fdeef5904c3e56bcc7e77e9d61a18a2cdc682d7a7a8a3e24f53957f439cdb57e3edf897341e7bac5c443fbd01f901129d1b0a117365727665726c657373626c65737365721209696e736161736974791afe080afb082d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d494944497a4343416775674177494241674952414e4d393065586c434c6f516450715542316b4e4f6863774451594a4b6f5a496876634e4151454c425141770a4d4445534d4241474131554543684d4a6157357a5957467a615852354d526f7747415944565151444578467a5a584a325a584a735a584e7a596d786c63334e6c0a636a4165467730784e7a41354d5451774e6a4d344d6a6461467730794d6a41354d544d774e6a4d344d6a64614d444178456a415142674e5642416f5443576c750a6332466863326c30655445614d4267474131554541784d5263325679646d56796247567a63324a735a584e7a5a584977676745694d41304743537147534962330a445145424151554141344942447741776767454b416f494241514448524b556f365561437772796b5762313171784e444a4548652b6d4f5165354f6f617552750a42397838566d72434a4845565539754139386a68455347466e7330522b3078514f742b476479506f4246385153544652612b784e6f4e616349576479736644300a4e716369435638634738692b4735536355533258574c394d786a416744506c7276344e67514e2f736a4b2b7255496f6e4e5975316e572b6970505733503338300a6c626265377550462f2f474765656e6f676c347044534d30646e306b5242326f67334d7654386a477541362b75476a4451387261534361754e724945763132720a654a4c64634b32555074765651627a4f53784b536d746e4448567a5352463773532f6376554a6a416a2f67412b57325a6b38384a45623943457235496b41617a0a6271523673323138323555706c6654334c62366946744d32444f324f4e4a502f705955317a642f776e6b424b446f707841674d424141476a4f4441324d4134470a41315564447745422f775145417749437044415442674e56485355454444414b4267677242674546425163444154415042674e5648524d4241663845425441440a4151482f4d4130474353714753496233445145424377554141344942415142386159434f4f332f4b517a2f5959384e515270484f6763736646316a30534f72590a6a38677176305038396d52357650762b504a5454737647434b5151733178305654707472666176704762564c4e64706c7a51382b3439757875693756734b6f4a0a4574462b366d625072766b4e4e517565716c45496d476e4967646c6650774b754f6f426a574134416e4237576c72593170352f75736637366151724c6c574d770a7262454d796f736f307361746d32384858762b574b47653442537949592f546c6279322f34624b343555652f653538442b726a526a7278704a696554723136350a7853586a665778487943537070326e465665662f57547143552b795665634f7a63326368466849427465376642354b6c5172445241746333687a495463734c7a0a7849453941443457446749313538675a7830375135744677756d524a77532b51575a752f503079362b622f68354b3932516e76340a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a22fe080afb082d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d494944496a43434167716741774942416749514346616478556b755261374d51317232576d6a5a6c6a414e42676b71686b69473977304241517346414441770a4d524977454159445651514b45776c70626e4e6859584e7064486b78476a415942674e5642414d5445584e6c636e5a6c636d786c63334e696247567a633256790a4d423458445445334d446b784e4441324d7a67794e316f58445449794d446b784d7a41324d7a67794e316f774d4445534d4241474131554543684d4a6157357a0a5957467a615852354d526f7747415944565151444578467a5a584a325a584a735a584e7a596d786c63334e6c636a4343415349774451594a4b6f5a496876634e0a4151454242514144676745504144434341516f4367674542414d5a6e417067504834562b6d3969447759616655785467664f43627a396d67735969564a345a430a2b6262433870795a31374a79364d7238427a494163624f65554b6541346b49386739374859415933495563687268674f42444d6756717a6465765466357575360a64394d5065507339525777574f67394b574c33426f3678412f38557a70555036455735676838486b7256636f6972683942437041375a6d45774852354b777a780a53654d427056337a336b546a6d48527936546b4f4968684f7876755565617a4f44774d436e707431534c3757324137786b346f536a714f57354a483733654f4f0a522f66737334656f44694c553656414b6b7443367238587a54457776424c4e51352f43532b6c747649436836464849576d6e63433074355336787032552b59730a666f6f4b7657733541636a6f4b6b52534e356d7434516c676a795352332b73462f427a77645a367147447759445430434177454141614d344d445977446759440a565230504151482f4241514441674b6b4d424d47413155644a51514d4d416f47434373474151554642774d424d41384741315564457745422f7751464d414d420a416638774451594a4b6f5a496876634e4151454c42514144676745424148553251464345486171384b58346c48537467434e364f5761624a6e494147676e73430a45377746336832595a5a6a566d75426830644255746775626c4569386336536b6d50724f524c6165564b2b304d38677742612f4464506c356353587a7a2f37760a736771396e3665445455345865593543787a7936464f576b574f696f48357436636b464d624937566534714f79677a6f6c7549614f6152705a387179437232320a557a787172346b3054596161386a4a5a385279673365754369725531453258666536357554704c376b2f454635754c34304d6e4e5964664169514e47554171770a2b6b43514d64494549442b6176496b564d7554475664476d673546515a624d30734b596e6878626a332b6177344f504c444478777549746c324167426b5754340a737a2b42796e4b6b61496e7347364c6e303936725447464431716262393876615a317738332f5364587a76493575676f4b72633d0a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a2afa080af7082d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d49494449444343416769674177494241674952414d50524735733562523071466d37355532566e445241774451594a4b6f5a496876634e4151454c425141770a4d4445534d4241474131554543684d4a6157357a5957467a615852354d526f7747415944565151444578467a5a584a325a584a735a584e7a596d786c63334e6c0a636a4165467730784e7a41354d5451774e6a4d344d6a6861467730794d6a41354d544d774e6a4d344d6a68614d444178456a415142674e5642416f5443576c750a6332466863326c30655445614d4267474131554541784d5263325679646d56796247567a63324a735a584e7a5a584977676745694d41304743537147534962330a445145424151554141344942447741776767454b416f494241514447756838626a72534a6e624370346954686b776d354964564678796b3867314e54315543530a504f367174416450754478395449717a51414b36754b7664637930654f68365550644b38387943322b3634756f52424d5a31734476344442302b64302b722f590a3065426a6f4a6b6446535759754c43743959396c457165595557726c7a79744167466f534d433634785a547330523739316b467247506c7346683470354142560a664b7148674d693946692f7572583850496f5533685258557873734a496b555176677270504934374e65356268307739692f384964632b374b654c675069714b0a793442736b36697439476576424a64445a6a766f68454d38584a754f387463724770644b50637a6f71776d6548504544652f58567666624559624d776e522f710a767a726b6e6c71666d505445323961425a6f37394f57344c7546302f78566c2f7265344869696a31646679683846486641674d424141476a4e54417a4d4134470a41315564447745422f775145417749466f44415442674e56485355454444414b4267677242674546425163444154414d42674e5648524d4241663845416a41410a4d41304743537147534962334451454243775541413449424151424831727a4d574d6846433054527a44426373475941505543456a65564b7251616c702f32660a465a723359684d4364385a572f5741326a39572f374e692f44614f62636847354e59567631514f4d376d6b795a6b50704e4f495448543273744938454e3673340a6d2f53794f6856526b4f6e41504a4d6f676b586b524a524e515836774741596e50644452345766653635744c69686d6d66645466795a36715a516835684d456d0a71383066396c36675736665555466b61387a787a72435a4d727a6a2f6d674a376b7161324b545a38724d375234624b762b76723849337a586c433230586e39350a4d584b596e4c4535422f76686f763432304a5536695a47467365355a4c3062774d6430375339636d4457384f69574d4230696d344961315a2f4e4f6f636850590a776e48434552526d42384a6a616a58414d4f746479532b495a656962562b716f54644e686366472b6f72582f796365520a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a1a80027911403ebaa02cb467b8cd3bbeeefce2e8318d3d2eefbe5ace491cb00d7f31097d4bd49d510c8bc544dd14b3edee78343f65a3294d8f82c3139590b6788e62914c23fdee69b02a52ff8f59a3995a16c3c102c6dd4e773ea5f7b731f9ca2ba59b5ef360122bec413769005d249716545c2e677a2f3ce7b04003cb621b1b76181f1e2bebaa5dbeb18b1a3ab217bd34552f5766f7e04a5194c02277ba4ab52f0c2ef500d8b9f833163d5f7b5d3bd1c7aaf627e2f44a4f3fabc136591f2a1b55fcec55849507a10e8c49404422e0191276320329a718200d80de4a7f2a4e9f30916654bc6e7894843b599b4e284f1b6a8fd5d6a2f8c13f41965f65984f6ba2d7763d220b08e4c7e8cd0510c088f413322446344644414334452d323732372d353331352d383936432d344535433839433341314239", "hex");

var unapprovedBytes = fs.readFileSync("./fixtures/unapproved.protobuf");
var approvedBytes = fs.readFileSync("./fixtures/approved.protobuf");
// var expectedHashBytes = fs.readFileSync("./fixtures/unapproved_expected_hash.bytes");
// var signableBytes = fs.readFileSync("./fixtures/signable.protobuf");
// var aliceSigningBytes = fs.readFileSync('./fixtures/alice_signing.protobuf');
var aliceBytes = fs.readFileSync('./fixtures/alice.protobuf');

var alice = qcpb.identitypb.Identity.decode(aliceBytes);
var bob = Identity.generate("bob", "insaasity");

test('can approve an action request', ()=> {
    "use strict";
    var ar = qcpb.ownershippb.ActionRequest.decode(unapprovedBytes);
    Ownership.approve(ar, bob.signingIdentity());
    expect(ar.approvals.length).toBe(1);
    expect(Ownership.isApprovalValid(ar.approvals[0], bob, ar)).toBeTruthy();
    console.log(unapprovedBytes.toString("hex"))

});

test('can check for a valid approval', ()=> {
    "use strict";
    var ar = qcpb.ownershippb.ActionRequest.decode(unapprovedBytes);
    Ownership.approve(ar, bob.signingIdentity());
    expect(Ownership.isApprovalValid(ar.approvals[0], bob, ar)).toBeTruthy();

    ar = qcpb.ownershippb.ActionRequest.decode(approvedBytes);
    expect(Ownership.isApprovalValid(ar.approvals[0], alice, ar)).toBeTruthy();
    // but it should not be valid for a different person
    expect(Ownership.isApprovalValid(ar.approvals[0], bob, ar)).not.toBeTruthy();
});